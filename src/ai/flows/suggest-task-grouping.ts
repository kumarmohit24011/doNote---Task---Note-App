// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview Implements a Genkit flow that suggests task groupings to improve productivity.
 *
 * - suggestTaskGrouping - A function that analyzes open tasks and suggests an ordering or grouping to improve productivity.
 * - SuggestTaskGroupingInput - The input type for the suggestTaskGrouping function.
 * - SuggestTaskGroupingOutput - The return type for the suggestTaskGrouping function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SuggestTaskGroupingInputSchema = z.object({
  tasks: z.array(
    z.object({
      title: z.string().describe('The title of the task.'),
      description: z.string().describe('A detailed description of the task.'),
      dueDate: z.string().describe('The due date of the task (YYYY-MM-DD).'),
      priority: z.enum(['high', 'medium', 'low']).describe('The priority level of the task.'),
    })
  ).describe('A list of open tasks with their titles, descriptions, due dates, and priorities.'),
});
export type SuggestTaskGroupingInput = z.infer<typeof SuggestTaskGroupingInputSchema>;

const SuggestTaskGroupingOutputSchema = z.object({
  suggestion: z.string().describe('A suggested grouping or ordering of tasks to improve productivity, with reasoning.'),
});
export type SuggestTaskGroupingOutput = z.infer<typeof SuggestTaskGroupingOutputSchema>;

export async function suggestTaskGrouping(input: SuggestTaskGroupingInput): Promise<SuggestTaskGroupingOutput> {
  return suggestTaskGroupingFlow(input);
}

const prompt = ai.definePrompt({
  name: 'suggestTaskGroupingPrompt',
  input: {schema: SuggestTaskGroupingInputSchema},
  output: {schema: SuggestTaskGroupingOutputSchema},
  prompt: `You are a productivity expert. Analyze the following tasks and suggest a grouping or ordering that improves productivity.

Tasks:
{{#each tasks}}
- Title: {{this.title}}
  Description: {{this.description}}
  Due Date: {{this.dueDate}}
  Priority: {{this.priority}}
{{/each}}

Consider the due dates, priorities, and descriptions of the tasks when making your suggestion. Explain your reasoning.
`,
});

const suggestTaskGroupingFlow = ai.defineFlow(
  {
    name: 'suggestTaskGroupingFlow',
    inputSchema: SuggestTaskGroupingInputSchema,
    outputSchema: SuggestTaskGroupingOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
